// Copyright (c) 2021, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

// This file was autogenerated by the pkg/compiler/tool/graph_isomorphizer.dart.

import "package:expect/expect.dart";

void v(Set<String> u, String name, int bit) {
  Expect.isTrue(u.add(name));
  Expect.equals(name[bit], '1');
}

@pragma('dart2js:noInline')
f_100_0(Set<String> u, int b) => v(u, '1000', b);
@pragma('dart2js:noInline')
f_110_0(Set<String> u, int b) => v(u, '1100', b);
@pragma('dart2js:noInline')
f_101_1(Set<String> u, int b) => v(u, '1011', b);
@pragma('dart2js:noInline')
f_111_1(Set<String> u, int b) => v(u, '1111', b);
@pragma('dart2js:noInline')
f_010_0(Set<String> u, int b) => v(u, '0100', b);
@pragma('dart2js:noInline')
f_010_1(Set<String> u, int b) => v(u, '0101', b);
@pragma('dart2js:noInline')
f_011_1(Set<String> u, int b) => v(u, '0111', b);
@pragma('dart2js:noInline')
f_001_0(Set<String> u, int b) => v(u, '0010', b);
@pragma('dart2js:noInline')
f_000_1(Set<String> u, int b) => v(u, '0001', b);
