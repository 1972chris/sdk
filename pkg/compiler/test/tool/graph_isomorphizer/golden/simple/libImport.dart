// Copyright (c) 2021, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

// This file was autogenerated by the pkg/compiler/tool/graph_isomorphizer.dart.

import "package:expect/expect.dart";

void v(Set<String> u, String name, int bit) {
  Expect.isTrue(u.add(name));
  Expect.equals(name[bit], '1');
}

@pragma('dart2js:noInline')
f_100(Set<String> u, int b) => v(u, '100', b);
@pragma('dart2js:noInline')
f_101(Set<String> u, int b) => v(u, '101', b);
@pragma('dart2js:noInline')
f_111(Set<String> u, int b) => v(u, '111', b);
@pragma('dart2js:noInline')
f_010(Set<String> u, int b) => v(u, '010', b);
@pragma('dart2js:noInline')
f_011(Set<String> u, int b) => v(u, '011', b);
@pragma('dart2js:noInline')
f_001(Set<String> u, int b) => v(u, '001', b);
