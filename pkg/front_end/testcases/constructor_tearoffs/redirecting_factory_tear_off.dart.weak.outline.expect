library /*isNonNullableByDefault*/;
import self as self;
import "dart:core" as core;

class Class1 extends core::Object {
  static final field dynamic _redirecting# = <dynamic>[self::Class1::•]/*isLegacy*/;
  constructor _() → self::Class1
    ;
  static factory •() → self::Class1
    let dynamic #redirecting_factory = self::Class1::_ in invalid-expression;
}
class Class2 extends core::Object {
  static final field dynamic _redirecting# = <dynamic>[self::Class2::named]/*isLegacy*/;
  constructor _() → self::Class2
    ;
  static factory named() → self::Class2
    let dynamic #redirecting_factory = self::Class2::_ in invalid-expression;
}
class Class3 extends core::Object {
  final field core::int field;
  static final field dynamic _redirecting# = <dynamic>[self::Class3::•]/*isLegacy*/;
  constructor _(core::int field) → self::Class3
    ;
  static factory •(core::int field) → self::Class3
    let dynamic #redirecting_factory = self::Class3::_ in invalid-expression;
}
class Class4 extends core::Object {
  final field core::int? field;
  static final field dynamic _redirecting# = <dynamic>[self::Class4::•]/*isLegacy*/;
  constructor _([core::int? field]) → self::Class4
    ;
  static factory •([core::int? field]) → self::Class4
    let dynamic #redirecting_factory = self::Class4::_ in invalid-expression;
}
class Class5 extends core::Object {
  final field core::int field1;
  final field core::int? field2;
  static final field dynamic _redirecting# = <dynamic>[self::Class5::•]/*isLegacy*/;
  constructor _(core::int field1, [core::int? field2]) → self::Class5
    ;
  static factory •(core::int field1, [core::int? field2]) → self::Class5
    let dynamic #redirecting_factory = self::Class5::_ in invalid-expression;
}
class Class6 extends core::Object {
  final field core::int field1;
  final field core::int? field2;
  final field core::int field3;
  static final field dynamic _redirecting# = <dynamic>[self::Class6::•]/*isLegacy*/;
  constructor _(core::int field1, {core::int? field2, required core::int field3}) → self::Class6
    ;
  static factory •(core::int field1, {core::int? field2, required core::int field3}) → self::Class6
    let dynamic #redirecting_factory = self::Class6::_ in invalid-expression;
}
static final field core::bool inSoundMode;
static method main() → dynamic
  ;
static method testNoArgs() → dynamic
  ;
static method testArgs() → dynamic
  ;
static method expect(dynamic expected, dynamic actual) → dynamic
  ;
static method throws(() → dynamic f, {core::bool inSoundModeOnly}) → dynamic
  ;
